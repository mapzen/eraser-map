apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'checkstyle'

def VECTOR_TILE_API_KEY_DEBUG = hasProperty('vectorTileApiKeyDebugProp') ? '"' + vectorTileApiKeyDebugProp + '"' : "null";
def VECTOR_TILE_API_KEY_RELEASE = hasProperty('vectorTileApiKeyReleaseProp') ? '"' + vectorTileApiKeyReleaseProp + '"' : "null";
def VALHALLA_API_KEY = hasProperty('valhallaApiKey') ? '"' + valhallaApiKey + '"' : "null";
def MINT_API_KEY = hasProperty('mintApiKey') ? '"' + mintApiKey + '"' : "null";

android {
  compileSdkVersion 22
  buildToolsVersion "21.1.2"

  defaultConfig {
    applicationId "com.mapzen.erasermap"
    minSdkVersion 15
    targetSdkVersion 22
    versionCode 2
    versionName "0.3-SNAPSHOT"
    multiDexEnabled true
  }
  buildTypes {
    debug {
      buildConfigField "String", "VECTOR_TILE_API_KEY", VECTOR_TILE_API_KEY_DEBUG
      buildConfigField "String", "VALHALLA_API_KEY", VALHALLA_API_KEY
      buildConfigField "String", "MINT_API_KEY", MINT_API_KEY
    }
    release {
      buildConfigField "String", "VECTOR_TILE_API_KEY", VECTOR_TILE_API_KEY_RELEASE
      buildConfigField "String", "VALHALLA_API_KEY", VALHALLA_API_KEY
      buildConfigField "String", "MINT_API_KEY", MINT_API_KEY
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }
  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
  }
  testOptions {
    unitTests.returnDefaultValues = true
  }
}

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
    events "started", "skipped", "passed", "failed"
    showStandardStreams true
  }
}

task checkstyle(type: Checkstyle) {
  configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
  source 'src'
  include '**/*.java'
  include '**/*.kt'
  exclude '**/gen/**'

  classpath = files()
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
  maven { url "https://mint.splunk.com/gradle/" }
}

dependencies {
  compile 'com.android.support:appcompat-v7:22.2.0'
  compile 'org.jetbrains.kotlin:kotlin-stdlib:0.12.213'
  compile 'com.mapzen.tangram:tangram:0.1-SNAPSHOT'
  compile 'com.mapzen.android:lost:1.0.1'
  compile('com.mapzen.android:pelias-android-sdk:0.5-SNAPSHOT') {
    exclude group: 'javax.annotation:javax', module: 'javax.annotation-api'
  }
  compile 'com.mapzen:leyndo-android-library:0.1-SNAPSHOT'
  compile 'com.google.dagger:dagger:2.0'
  compile 'com.google.dagger:dagger-compiler:2.0'
  compile 'javax.annotation:javax.annotation-api:1.2'
  compile 'com.android.support:support-v4:22.2.0'
  compile 'com.squareup:otto:1.3.7'
  compile 'com.sothree.slidinguppanel:library:3.0.0'
  compile('com.mapzen:on-the-road:0.8-SNAPSHOT') {
    exclude group: 'org.apache.commons', module: 'commons-io'
  }
  compile 'com.splunk.mint:mint:4.2.1'
  compile 'com.squareup.okhttp:okhttp:2.4.0'
  compile 'com.mapzen.android:speakerbox:1.1.0'
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:1.9.5'
  testCompile 'org.assertj:assertj-core:1.7.0'
  testCompile('org.robolectric:robolectric:3.0') {
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'org.apache.httpcomponents', module: 'httpclient'
  }
}
